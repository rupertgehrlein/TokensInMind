{
  "Impressum" : "Impressum",
  "Datenschutz" : "Datenschutz",
  "Kontakt" : "Kontakt",
  "Baustelle" : "Die Webseite befindet sich noch im Aufbau. <br><br> Aktuell stehen nur die Bereiche \"Kryptographie\" und \"Blockchain\" zur Verfügung. <br><br> <b><u>You can switch the Language in the top right corner.</b></u>",
  "Kryptographie" : {
    "Titel" : "Kryptographie",
    "Absatz 1" : "Kryptographie ist wie ein geheimes Rätselspiel, das uns hilft, Informationen sicher zu verschlüsseln. Stell dir vor, du möchtest eine wichtige Nachricht an einen Freund schicken, aber du möchtest sicherstellen, dass niemand anderes sie lesen kann. Kryptographie hilft uns dabei! Hierfür haben wir deiner Lehrkraft auch ein paar Beispiele zur Verfügung gestellt, damit du selbst einmal etwas verschlüsseln kannst. <br><br> In der Kryptographie verwenden wir spezielle Codes und Geheimnisse, um unsere Informationen zu schützen. Um diese Geheimnisse oder Rätsel aber besonders schwierig zu gestalten benutzen wir in der Informatik sogenannte Algorithmen. Diese Algorithmen nehmen unsere Informationen und verwandeln sie in etwas Unverständliches für andere Leute. Nur diejenigen, die den geheimen Code kennen, können die Informationen wieder entschlüsseln.",
    "Absatz 2" : "Es gibt verschiedene Arten von kryptographischen Verfahren und Algorithmen, die verwendet werden können. Einer dieser Algorithmen ist der SHA-256-Algorithmus. Das steht für \"Secure Hash Algorithm 256-bit\". Es ist ein sehr sicherer Algorithmus, der Informationen in einen einzigartigen Hash-Wert umwandelt. <br><br> Ein Hash-Wert ist wie ein digitaler Fingerabdruck für Informationen. Der SHA-256-Algorithmus nimmt die Informationen, die wir verschlüsseln möchten, und berechnet einen einzigartigen Hash-Wert dafür. Der Hash-Wert ist eine Kombination aus Buchstaben und Zahlen, die die verschlüsselten Informationen repräsentiert.",
    "Absatz 3" : "Der SHA-256 Algorithmus ist so konzipiert, dass es sehr schwierig ist, den ursprünglichen Inhalt aus dem Hash-Wert abzuleiten. Selbst wenn sich nur ein kleines Detail in den Informationen ändert, ändert sich der Hash-Wert vollständig. Das macht die Verschlüsselung sehr sicher und schützt unsere Informationen.",
    "Absatz 4" : "Neben dem SHA-256 Algorithmus gibt es noch viele andere kryptographische Verfahren und Algorithmen. Zum Beispiel gibt es den RSA-Algorithmus, der spezielle mathematische Zahlen verwendet, um Informationen zu verschlüsseln. Es gibt auch den Caesar-Algorithmus, bei dem Buchstaben im Alphabet verschoben werden, um die Informationen zu verschlüsseln. <br><br> Kryptographie und die verwendeten Algorithmen helfen uns, Informationen sicher zu verschlüsseln und zu schützen. Sie spielen eine wichtige Rolle in der Sicherheit von Daten und in Technologien wie der Blockchain.",
    "Button 1" : "Klicke hier, wenn du herausfinden möchtest, wie sicher der SHA-256 Algorithmus wirklich ist",
    "Button 2" : "Klicke hier, wenn du das hashen eines Blocks einmal ausprobieren möchtest",
    "Aufgaben" : {
      "Titel" : "Zum Ausprobieren...",
      "Hinweis" : "<u>Hinweis:</u> Bei unserer Verschlüsselung und Entschlüsselung werden nur Großbuchstaben ausgegeben. Du kannst aber auch Kleinbuchstaben eingeben. Nur dass du dich nicht wunderst. Sonderzeichen wie zum Beispiel ein Punkt oder ein Leerzeichen werden nicht verschlüsselt, aber trotzdem angezeigt. Weiterhin wird ein scharfes s (ß) automatisch in zwei einzelne s (ss) umgewandelt. Die Buchstaben ä, ö und ü werden nicht umgewandelt. Willst du die Buchstaben in deiner Nachricht verwenden, dann nutze bite \"ae\" für ä, \"oe\" für ö und \"ue\" für ü.",
      "Aufgabentext" : "Wir haben dir unter dieser Box eine kleine Möglichkeit der Verschlüsselung vorbereitet. In der oberen Box kannst du eine Nachricht verschlüsseln. Gib dafür einfach einen beliebigen Text ein und wähle eine Verschiebung der Buchstaben. Wenn du fertig bist, dann klicke auf \"Verschlüsseln\" und dir wird der verschlüsselte Text angezeigt. Das Ganze klappt in der unteren Box genau anders herum. Lass dir von deinem Nachbarn oder deiner Nachbarin einen verschlüsselten Text und die Verschiebung geben. Gib die Daten anschließend in der unteren Box ein und entschlüssel die geheime Nachricht!"
    },
    "Verschlüsselung" : {
      "Überschrift 1" : "Nachricht verschlüsseln:",
      "Überschrift 2" : "Nachricht entschlüsseln:",
      "Text" : "Text:",
      "Verschiebung" : "Verschiebung:",
      "Button 1" : "Verschlüsseln",
      "Button 2" : "Entschlüsseln"
    }
  },
  "SHA-256" : {
    "Subtitel" : "Exkurs",
    "Titel" : "Wie sicher ist SHA-256?",
    "Absatz 1" : "Wie sicher SHA-256 wirklich ist lässt sich nur schwer in Worte fassen oder vorstellen. Wir versuchen es trotzdem einmal dir zu verbildlichen. Das ist zwar etwas kompliziert, zeigt dir aber, dass die Verschlüsselung mit SHA-256 wirklich sehr sehr sicher ist. <br> Wie du vielleicht schon gesehen hast, geht das Verschlüsseln von Daten mit Hilfe von SHA-256 relativ schnell. Meist dauert das nur wenige Sekunden. Wenn überhaupt. Schwierig wird es erst dann, wenn man nur den Hash-Wert hat und daraus nun die ursprünglichen Daten haben möchte, die verschlüsselt wurden. <br> Das Ganze ist sogar so schwierig, dass es bis jetzt noch keiner geschafft hat etwas besseres zu finden als \"einfach\" zu raten. Das kann ein Computer zwar schneller als du oder wir, trotzdem ist SHA-256 immer noch super sicher.",
    "Absatz 2" : "Im schlimmsten Fall braucht man für das Raten nämlich 2<sup>256</sup> Versuche. Die Zahl ist aber viel zu groß, dass wir sie uns vorstellen könnten. Folglich versuchen wir uns die Zahl nach und nach aufzuteilen und uns das anzuschauen.",
    "Absatz 3" : "Praktischerweise können wir 2<sup>256</sup> in 8 Teile aufteilen und erhalten folglich 2<sup>32</sup>. Wahrscheinlich hattest du das noch nicht im Mathe-Unterricht, aber du kannst uns glauben, dass das stimmt. Die Zahl 2<sup>32</sup> können wir uns eher vorstellen. Wenn wir das in den Taschenrechner eingeben erhalten wir 4.294.967.296. Das ist immer noch eine super große Zahl, aber damit können wir schon eher etwas anfangen.",
    "Absatz 4" : "Wir haben nun also aus 2<sup>256</sup> folgendes gemacht",
    "Absatz 5" : "und wir wissen bereits, dass 2<sup>32</sup> ungefähr 4 Milliarden sind. Damit rechnen wir jetzt nach und nach weiter.",
    "32" : "Für besonders schnelles Ausprobieren ist in einem Computer die Grafikkarte geeignet. Der Prozessor kann das zwar auch, jedoch ist der Prozessor besser darin komplexe Aufgaben zu lösen und nicht einfach nur zu \"raten\". Deswegen sind in einem Prozessor auch eher wenig Rechenkerne verbaut. In einer Grafikkarte hingegen sind viel mehr kleine Rechenkerne verbaut, die eher einfache Sachen berechnen können. <br><br> Super schnelle neue Grafikkarten können heutzutage ca. 500 Millionen bis hin zu 1 Milliarde Berechnungen pro Sekunde vollziehen. Das heißt also, dass wir für 2<sup>32</sup> Berechnungen pro Sekunde ca. 4-8 Grafikkarten in einem Computer verbauen müssten. Das ist zwar eher selten, dass jemand so etwas machen würde, aber tun wir einmal so, als wäre das ganz normal, dass ein Computer mit so vielen schnellen Grafikkarten besetzt wird und nennen diesen Computer ab sofort \"Super-Computer\".",
    "64" : "Von eben diesen \"Super-Computern\" bräuchten wir jetzt entsprechend ca. 4 Milliarden Stück, um eine Rechenleistung von 2<sup>64</sup> Berechnungen pro Sekunde erreichen zu können. <br><br> Um das auch Mal in eine Perspektive zu setzen: Google betreibt aktuell irgendwo zwischen einer und fünf Millionen Servern auf der Welt. Eine genaue Zahl gibt es aber nicht. Sicherlich ist auch nicht jeder der Server so stark wie unser \"Super-Computer\" von oben. Wenn dem aber so wäre, dann bräuchten wir entsprechend ca. 1000 Googles um die gewünschte Rechenleistung von 2<sup>64</sup> erreichen zu können. Ganz schön viel... Für die weitere Rechnung nennen wir diese 1000 Googles einfach einmal \"Kilo-Google\" (die Vorsilbe \"kilo\" steht unter anderem in der Mathematik für 1000).",
    "96" : "Im nächsten Schritt gehen wir davon aus, dass ganz viele Menschen ein eigenes \"Kilo-Google\" besitzen daheim. Wie viele Menschen fragst du dich? Genau! 4 Milliarden Menschen. Also ca. die halbe Weltbevölkerung hat ein eigenes \"Kilo-Google\" daheim voller \"Super-Rechner\". Das reicht aber noch lange nicht... ",
    "128" : "Als nächstes müssen wir wieder eine Stufe größer werden. Wir brauchen nun entsprechend 4 Milliarden Mal eben diese Erde, auf der die Hälfte der Menschheit ein eigenes \"Kilo-Google\" voller \"Super-Computer\" besitzt. <br><br> Wir können zwar nicht mit Sicherheit sagen, wie viele Planeten es in unserer Galaxie gibt, jedoch wissen wir, dass es ca. 100 bis 400 Milliarden Sterne in unserer Galaxie gibt. Das heißt also, dass jeder 100ste Stern in unserer Galaxie eine solche Erde besitzen müsste, um 2<sup>128</sup> Berechnungen pro Sekunde schaffen zu können. Puuh... die Hälfte ist geschafft.",
    "160" : "Dieser Schritt ist wieder einfacher. Wir brauchen \"einfach\" 4 Milliarden von diesen Galaxien.",
    "192" : "Noch größer zu werden ist ganz schöner Quatsch, weil man sich so eine große Menge an Planeten und Galaxien schon gar nicht richtig vorstellen kann. Also können wir uns noch mit der Zeit, in der die Berechnung fertig sein soll beschäftigen. Schließlich müssen wir ja nicht zu jeder Sekunde unbedingt so einen Hash-Wert knacken. <br><br> 4 Milliarden Sekunden. Umgerechnet sind das ca. 127 Jahre. Wow.",
    "224" : "Und das jetzt wiederum mal 4 Milliarden... <br><br> Damit sind wir bei ca. 507 Milliarden Jahren. Das ist ungefähr 37 Mal so alt wie das gesamte Universum.",
    "256" : "Wer jetzt aufmerksam mitgezählt hat, merkt, dass wir erst 7 Mal die 2<sup>32</sup> behandelt haben. Ein Mal bleibt also noch übrig. Das heißt, dass wenn in 4 Milliarden Galaxien auf 4 Milliarden Planeten, 4 Milliarden Menschen ein eigenes \"Kilo-Google\" daheim haben voller \"Super-Computer\" und 507 Milliarden Jahre alle zusammen einen Hash-Wert versuchen würden zu knacken, dann würden sie es in <b>einem von 4 Milliarden</b> Fällen schaffen. Um auch das kurz ins Verhältnis zu setzen: Es wäre dann immer noch wahrscheinlicher 1700 Mal im Lotto zu gewinnen, als SHA-256 zu knacken. Das ist also schon ziemlich sicher..."
  },
  "Blockchain-Home" : {
    "Titel" : "Die Blockchain",
    "Absatz" : "Das Thema Blockchain ist groß und etwas kompliziert. Folglich haben wir dir auf dieser Seite verschiedene interaktive Übungen und Infotexte eingebaut. Hierbei zeigen wir dir einzelne Bestandteile der Blockchain, damit du später den Zusammenhang zwischen diesen einzelnen Bestandteilen und dem vorherigen Kapitel der Kryptographie verstehen kannst. Am besten klickst du dich nach und nach durch die Kapitel durch und liest den dazugehörigen Text. Weiter unten findest du dann auf jeder Seite ein paar Aufgaben und einen interaktiven Teil, wo du selbst einmal ausprobieren kannst, was da überhaupt alles passiert in so einer Blockchain.",
    "Box" : {
      "Absatz 1" : "Im <u>ersten Kapitel</u> lernst du, wie ein einzelner Block einer Blockchain überhaupt funktioniert und für was er da ist und gebraucht wird.",
      "Absatz 2" : "Im <u>zweiten Kapitel</u> lernst du, wie mehrere einzelne Blöcke zusammen eine Blockchain ergeben können. Hier ist uns vor allem wichtig, dass du lernst, wie die Technologie es schafft alle Blöcke einer Blockchain miteinander einmalig zu verbinden.",
      "Absatz 3" : "Im <u>dritten Kapitel</u> lernst du, wie sich die Schwierigkeit der Hash-Berechnung manipulieren lässt. Hierzu stellen wir spezielle Regeln auf und nutzen die sogenannte \"Nonce\".",
      "Absatz 4" : "Im <u>vierten Kapitel</u> lernst du, wie der Hash-Wert berechnet wird. Da das wirklich kompliziert ist, empfehlen wir dir das Kapitel nur anzuschauen, wenn du den Rest schon halbwegs verstanden hast und wirklich wissen willst wie das ungefähr funktioniert. Für den Rest der Website ist das aber nicht sonderlich wichtig. Da reicht es zu wissen, dass mit einem Hash-Algorithmus Daten verschlüsselt werden können. Wie das genau geht wissen selbst viele Profis nicht. Schließlich haben wir Computer dafür!"
    },
    "Buttons" : {
      "1" : "Wie funktioniert ein einzelner Block in einer Blockchain?",
      "2" : "Was passiert, wenn wir mehr als einen Block haben?",
      "3" : "Wie kann ich die Berechnung schwerer machen?",
      "4" : "Wie funktioniert die Erstellung eines Hash-Wertes?"
    }
  },
  "Block" : {
    "Titel" : "Ein Block einer Blockchain",
    "Absatz 1" : "Ein einzelner Block in der Blockchain ist wie ein wichtiger Baustein in einem digitalen Gebäude. Stell dir vor, du möchtest eine Liste von Transaktionen speichern, wie zum Beispiel wer etwas gesendet hat, wer es empfangen hat, wie viel gesendet wurde und wann die Transaktion stattgefunden hat. Anstatt diese Informationen einzeln zu speichern, können wir sie in einem Block zusammenfassen.",
    "Absatz 2" : "Ein Block besteht aus mehreren Elementen. Zuerst haben wir den Header des Blocks. Der Header enthält wichtige Informationen über den Block, wie zum Beispiel die Version der Blockchain, die Zeitstempel der Transaktionen und einen speziellen Code, den wir Hash nennen. Dieser Hash-Code ist wie ein digitaler Fingerabdruck für den Block und macht ihn einzigartig.",
    "Absatz 3" : "Neben dem Header enthält der Block auch eine Liste von Transaktionen. Hier werden alle Details über die Transaktionen gespeichert, zum Beispiel wie wer etwas gesendet hat, wer es empfangen hat und wie viel gesendet wurde. Diese Transaktionen werden zusammengefasst und im Block gespeichert.",
    "Absatz 4" : "Damit der Block mit anderen Blöcken in der Blockchain verbunden werden kann, enthält er auch einen Verweis auf den vorherigen Block. Dieser Verweis wird durch den Hash-Wert des vorherigen Blocks dargestellt. Durch diesen Verweis entsteht eine Kette von Blöcken, da jeder Block den vorherigen Block kennt und mit ihm verbunden ist. Das macht die Blockchain so sicher und stabil.",
    "Absatz 5" : "Zusätzlich enthält der Block noch eine sogenannte Nonce. Die Nonce ist wie ein geheimes Passwort oder eine zufällige Zahl, die nur einmal verwendet wird. Sie wird zusammen mit anderen Informationen im Block verschlüsselt und hilft dabei, die Integrität der Informationen zu gewährleisten.",
    "Absatz 6" : "Wenn der Block komplett ist, wird der Hash-Code berechnet, indem der Inhalt des Blocks, einschließlich des Headers, der Transaktionen, des vorherigen Blockverweises und der Nonce, in einen speziellen Algorithmus eingegeben wird. Dieser Algorithmus berechnet den Hash-Code, der dann den Block einzigartig macht. Jede Änderung in den Informationen des Blocks würde den Hash-Code verändern, was bedeutet, dass der Block nicht mehr gültig wäre.",
    "Absatz 7" : "Der fertige Block wird dann zur Blockchain hinzugefügt und an die anderen Teilnehmer des Netzwerks gesendet. Jeder Teilnehmer kann den Block überprüfen, indem er den Hash-Code überprüft und sicherstellt, dass er mit dem vorherigen Block in der Kette übereinstimmt.",
    "Absatz 8" : "Ein einzelner Block in der Blockchain ist also wie ein solides Fundament, das Informationen enthält, sicher miteinander verbindet und die Integrität der Daten gewährleistet. Die Blöcke bilden zusammen eine Blockchain, die als transparentes und sicheres digitales Register dient.",
    "Aufgaben" : {
      "Titel" : "Aufgaben",
      "1" : "Vergleiche mit deinem Nachbar oder deiner Nachbarin einmal alle Angaben, wenn der Block noch unberührt ist. Habt ihr die gleiche Nonce? Den gleichen Hash?",
      "2" : "Nun gebt beide einmal euren Vornamen ein und schaut wie sich der Block ändert.",
      "3" : "Als nächstes drückt ihr auf \"Berechne\". Schaut erneut was sich geändert hat und vergleicht eure Werte.",
      "4" : "Versucht nun einmal mehrere Einträge in Form eines Kassenbuchs zu machen, z.B.: <br> Marie schuldet Karim 10€ <br> Karim schuldet Leonie 20€ <br> Leonie schuldet Kim 15€ <br> Schaut anschließend, ob ihr beide den selben Hash-Wert erhaltet.",
      "5" : "Was passiert nun, wenn ihr versucht einen Namen oder eine Zahl zu ändern? Und was passiert, wenn man danach noch einmal auf \"Berechne\" drückt?",
      "6" : "Versucht eure Beobachtungen und Ergebnisse festzuhalten. Tauscht euch mit eurem Nachbarn oder eurer Nachbarin aus und stellt Vermutungen auf, warum ein Block einer Blockchain so funktioniert wie er es tut. Vielleicht hift euch ein erneuter Blick in den Erklärtext von oben, um eine Idee zu bekommen."
    }
  },
  "SingleBlock" : {
    "Daten" : "Daten",
    "Vorgänger" : "Vorgänger",
    "Berechne" : "Berechne"
  },
  "Blockchain" : {
    "Titel" : "Aufbau einer Blockchain",
    "Absatz 1" : "Die Blockchain ist wie ein besonderes digitales Kassenbuch, in dem wir Informationen sicher und transparent aufzeichnen können. Stell dir vor, du möchtest eine Liste von Transaktionen speichern, zum Beispiel wer etwas gesendet hat, wer es empfangen hat, wie viel gesendet wurde und wann die Transaktion stattgefunden hat. Anstatt diese Informationen in einem normalen Kassenbuch aufzuschreiben, verwenden wir die Blockchain.",
    "Absatz 2" : "Die Blockchain besteht aus vielen Blöcken, die miteinander verbunden sind. Jeder Block enthält Informationen über Transaktionen und einen speziellen Code namens Hash. Der Hash-Code ist wie ein einzigartiger digitaler Fingerabdruck für den Block und macht ihn besonders. Der Hash-Code wird aus den Informationen des Blocks berechnet und stellt sicher, dass der Block nicht verändert wurde.",
    "Absatz 3" : "Was eine Blockchain besonders macht, ist, dass sie von vielen Computern gemeinsam verwaltet wird, anstatt von einer einzigen Person oder Firma. Diese Computer bilden zusammen ein Netzwerk, das die Blockchain überprüft. Jeder Computer in diesem Netzwerk hat eine Kopie der gesamten Blockchain.",
    "Absatz 4" : "Bevor eine Transaktion in einen Block aufgenommen wird, wird sie von den Computern im Netzwerk überprüft. Die Computer stellen sicher, dass die Transaktion echt ist und dass der Absender z.B. genug Geld hat. Sobald die Überprüfung abgeschlossen ist, wird die Transaktion in den aktuellen Block geschrieben.",
    "Absatz 5" : "Damit die Blöcke miteinander verbunden werden können, enthält jeder Block einen Verweis auf den vorherigen Block. Auf diese Weise entsteht eine Kette von Blöcken, da jeder Block den vorherigen Block kennt und mit ihm verbunden ist. Das ist wichtig, denn wenn sich etwas in einem Block ändern würde, ändern sich auch alle nachfolgenden Blöcke. Eine Blockchain ist somit unveränderlich (im englischen: immutable), da nachträgliche falsche Einträge in einen Block sofort die Hash-Werte aller nachfolgenden Blöcke verändern und folglich falsch machen.",
    "Absatz 6" : "Ein weiterer wichtiger Punkt ist, dass die Blockchain transparent ist. Das bedeutet, dass alle Transaktionen für jeden sichtbar sind. Das ist hilfreich, um Betrug zu verhindern und sicherzustellen, dass alles fair abläuft. Auch du kannst jederzeit einen Blick in eine Blockchain werfen, auch wenn du sicherlich nicht alles verstehen wirst was da steht. Wenn du trotzdem einmal reinschauen willst, dann schau gerne einmal <a class=\"furtherLink\" href=\"https://blockchair.com/de\">hier vorbei</a>. Du kannst dich dort durch verschiedene Blockchains klicken, die Transaktionen in jedem Block nachschauen und schauen wer welche Transaktion vorgenommen hat. Auch die aktuellen Hash-Werte werden gezeigt sowie wann der neuste Block der jeweiligen Blockchain erstellt wurde.",
    "Aufgaben" : {
      "Titel" : "Aufgaben",
      "1" : "Unter den Aufgaben entdeckst du einen kleinen Ausschnitt aus einer Blockchain. Bevor du etwas in die Felder eingibst versuche einmal zu beschreiben was du siehst und wie eine Blockchain aufgebaut sein könnte.",
      "2" : "Trage nun einmal etwas in den <b>Block 1</b> ein. Beschreibe kurz in eigenen Worten was mit der Blockchain passiert. Woran glaubst du liegt das?",
      "3" : "Gib als nächstes auch beliebige Daten in <b>Block 2</b> und <b>Block 3</b> ein. Was ändert sich bei jedem Eintrag?",
      "4" : "Klicke jetzt nacheinander auf \"Berechne\". Erst bei <b>Block 1</b>, dann bei <b>Block 2</b> und als letztes bei <b>Block 3</b>. Was passiert bzw. ändert sich?",
      "5" : "Wenn nun wieder alle Blöcke grün und damit richtig berechnet sind, ändere einmal die Daten in <b>Block 2</b> ab. Fällt dir etwas auf, was diesmal anders ist als in Aufgabe 2? Stelle Vermutungen auf, warum sich die Blockchain so verhält wie sie es tut.",
      "6" : "Stelle eine Vermutung auf, warum wir dich in diesem Beispiel nur nacheinander auf \"Berechne\" drücken lassen und nicht in einer beliebigen Reihenfolge. Warum darfst du also in unserer Blockchain nicht den <b>Block 2</b> berechnen bevor du den <b>Block 1</b> berechnest?"
    }
  },
  "Nonce" : {
    "Titel 1" : "Was hat es mit der NONCE auf sich?",
    "Titel 2" : "Wie wird die Schwierigkeit bei der Hash-Berechnung festgelegt?",
    "Absatz 1" : "In der Kryptographie wird die Bezeichnung Nonce (Abkürzung für: \"number used only once\" oder \"number used once\" oder auf deutsch \"Zahl, die nur einmal benutzt wird\") genutzt, um eine Zahlen- oder Buchstabenkombination zu bezeichnen, die nur ein einziges Mal verwendet wird. Typische Möglichkeiten, eine Nonce zu erzeugen, sind die Verwendung von (kryptografisch sicheren) Zufallswerten, die ausreichend groß sind, so dass die Wahrscheinlichkeit einer doppelten Benutzung sehr gering ist, oder die Verwendung eines Zählers. Mit der Variante des Zählers arbeiten wir hier auf dieser Webseite. Eine Nonce wird immer dann genutzt, wenn es darum geht eine Verschlüsselung noch ein Stück sicherer zu machen. Stell dir zum Beispiel vor, dass du dich bei einer Seite wie Amazon oder YouTube anmeldest und entsprechend zuvor einen Account erstellt hast. Hierfür brauchst du in der Regel entweder einen Benutzernamen oder eine Mail-Adresse sowie ein Passwort. Die Webseiten müssen deine Daten entsprechend abspeichern auf ihren Servern, um es dir zu ermöglichen dich in Zukunft erneut einzuloggen. Wenn sie deine Daten nun aber als einfachen Text in deren Datenbanken ablegen würden, wäre im Fall eines Hacks die Gefahr für die Nutzer sehr groß. Folglich werden die Daten kryptographisch verschlüsselt, zumeist mit SHA-256. Die NONCE wird hierbei nun genutzt, um eine Entschlüsselung deiner Daten noch einmal komplizierter zu machen im Falle eines Hacks. Wie du möglicherweise auf unserer Webseite schon nachgelesen hast, ist das \"knacken\" von SHA-256 alleine schon sehr schwierig, aber es schadet bekanntlich nie gerade sensible Daten noch ein wenig besser zu schützen und es Angreifern noch schwieriger zu machen.",
    "Absatz 2" : "Die Schwierigkeit zur Erstellung eines Hash-Wertes kann künstlich verkompliziert werden. Unser hier genutztes Beispiel stellt die Regel auf, dass der Hash-Wert nur dann gültig ist, wenn eine bestimmte Anzahl an führenden Nullen vorhanden ist. Auf den anderen Seiten bezüglich des einzelnen Blocks sowie der Blockchain haben wir die Anzahl der führenden Nullen auf 4 festgelegt. Vielleicht ist dir das ja bereits aufgefallen, dass zuvor der Hash immer mindestens 4 Nullen am Anfang hatte. Solche Regeln können natürlich beliebig erstellt werden und auch im Laufe der Blockchain verändert werden. Genauso arbeitet im Übrigen die Blockchain rund um Bitcoin. Um dir zu zeigen, wie schnell und gravierend sich solche \"Kleinigkeiten\" auf die Dauer der Berechnung des Hash-Wertes auswirken, kannst du weiter unten festlegen, wie viele Nullen der Hash-Wert haben soll. Als Minimum kannst du eine Null einstellen und als Maximum 6 Nullen.",
    "Aufgaben" : {
      "Titel" : "Aufgaben",
      "Hinweis" : "<i><u>Hinweis</u>: Je nachdem wie schnell euer Computer oder Tablet ist, kann die Berechnung unterschiedlich lange dauern. Teilweise kann das manchmal mehrere Sekunden oder gar Minuten dauern. Tablets und Handys waren in unseren Tests meistens schneller als Laptops. Wundert euch also nicht, wenn es eine Zeit lang so aussieht, als würde gar nichts passieren. Bleibt einfach geduldig und wartet.</i>",
      "Einführung" : "Du siehst unter den Aufgaben zum einen in der orangenen Box eine Schieberegler. Der Regler stellt die Schwierigkeit ein. Das heißt in unserem Fall hier, dass der Regler bestimmt, wie viele Nullen am Anfang des Hashs sein müssen, damit er als gültig angesehen wird. Stellst du die Schwierigkeit also auf 1, so muss beim Hash unten <u>mindestens eine Null</u> am Anfang stehen. Stellst du die Schwierigkeit auf 6, müssen <u>mindestens sechs Nullen</u> am Anfang stehen.",
      "1" : "Bereite dir eine Tabelle mit vier Spalten vor. In die erste Spalte soll der Text kommen, der verschlüsselt wurde. In die zweite Spalte schreibst du die gewählte Schwierigkeit. In der dritten Spalte schreibst du die Nonce auf. In die vierte Spalte kommt dann die benötigte Zeit für die Berechnung. Am Ende soll deine Tabelle also ungefähr so aussehen:<br><br> <table> <tr> <th>Text</th> <th>Schwierigkeit</th> <th>Nonce</th> <th>Zeit in ms</th> </tr> <tr> <td>Test 1</td> <td>1</td> <td>4</td> <td>1</td> </tr> <tr> <td>...</td> <td>...</td> <td>...</td> <td>...</td> </tr> </table>",
      "2" : "Nun geht es an die Datensammlung für deine Tabelle. Gib für deine Daten einen beliebigen Text ein. Damit du den Überblick behälst wo du gerade bist und damit deine Tabelle nicht riesig wird, empfehlen wir dir einen kurzen Text mit dem aktuellen Schwierigkeitsgrad zu verbinden. Du könntest zum Beispiel einfach schreiben \"Test 1\", \"Test 2\" und so weiter. Entsprechend schreibst du dann den Text \"Test 1\" beim ersten Durchlauf als Daten auf und stellst die Schwierigkeit 1 über den Schieberegler ein. Dann klickst du auf \"Berechne\", liest unter dem Block die benötigte Zeit für die Berechnung ab und schreibst alles in deine Tabelle. Anschließend machst du mit \"Test 2\" weiter und stellst die Schwierigkeit auf 2. Das Ganze machst du so lange, bis du alle Schwierigkeiten ausprobiert und entsprechend deine Tabelle gefüllt hast.",
      "3" : "Wenn du in Mathe schon mit Koordinatensystemen gearbeitet hast, kannst du gerne einmal probieren deine Daten in ein Koordinatensystem zu bringen. Hierbei kommt die benötigte Zeit auf die Y-Achse und die Schwierigkeit auf die X-Achse. Wir haben deiner Lehrkraft hierfür auch einen Vordruck bereitgestellt. Wenn du noch nicht mit Koordinatensystemen gearbeitet hast, dann versuche dir trotzdem einmal die Zeiten genauer anzusehen. Was fällt dir auf?",
      "4" : "Unser Beispiel hier geht nur bis zu einer Schwierigkeit von 6. Versuche einmal schriftlich mit deinem Nachbarn oder deiner Nachbarin festzuhalten wie lange es mit einer Schwierigkeit von 7 oder gar 8 dauern könnte, bis der Computer fertig gerechnet hat. Wie kommt ihr auf eure Vermutung?",
      "5" : "Wie bereits oben erklärt, arbeiten wir auf dieser Website mit einer Nonce in Form eines Zählers. Versuche einmal aufzuschreiben was das überhaupt heißt. Vielleicht helfen dir ja die unterschiedlich großen Zahlen, die du für die unterschiedlichen Schwierigkeiten als Nonce erhalten hast."
    },
    "Schwierigkeit" : "Schwierigkeit wählen:",
    "Berechnung" : "Die letzte Berechnung des Hashs dauerte: "
  },
  "Hash" : {
    "Titel" : "Wie wird der Hash berechnet?",
    "Erklärung" : "Das Video zur Erklärung ist noch im Entstehen.",
    "Beispiel 1" : {
      "Titel" : "1. Einfache SHA-256 Verschlüsselung",
      "Erklärtext" : "In diesem Beispiel lassen wir deine Daten einfach nur durch den Hash-Algorithmus laufen. Wie du siehst geht das Hashen super schnell. Gleichzeitig solltest du auch erkennen können, dass bereits die kleinsten Änderungen in den Daten einen riesigen Unterschied haben."
    },
    "Beispiel 2" : {
      "Titel" : "2. SHA-256 Verschlüsselung mit Bedingung und Nonce",
      "Erklärtext" : "Hier in dem Beispiel lassen wir den Hash-Wert nur dann gelten, wenn er mit mindestens <u>3 Nullen am Anfang</u> beginnt. Um das aber erreichen zu können brauchen wir zusätzlich noch die Nonce. Das funktioniert hierbei so, dass zunächst einmal geschaut wird, ob zufälligerweise der Hash-Wert deiner Daten schon mit 3 Nullen beginnt. Tut er das nicht, dann nehmen wir die Nonce mit in die Berechnung auf. Diese ist am Anfang auf \"0\" gesetzt. Wenn der Hash-Wert dann immer noch nicht mit 3 Nullen anfängt, wird die Nonce um eins erhöht. Das machen wir so lange, bis ein passender Hash-Wert dabei herauskommt. Umso größer die Bedingung, desto länger dauert normalerweise auch die Berechnung. Das kannst du dir aber sonst auch nochmal auf unserer Website genauer anschauen im Themenbereich der Nonce. <br><br> <b>Frage an dich:</b> Warum muss sich denn die Nonce überhaupt ändern, damit sich der Hash-Wert ändern kann und unsere Bedingung erfüllt?"
    },
    "Beispiel 3" : {
      "Titel" : "3. SHA-256 Verschlüsselung mit Bedingung, Nonce und Beachtung vorheriger Blöcke",
      "Erklärtext" : "Als nächstes nehmen wir auch noch den Hash-Wert des vorherigen Blocks mit in unsere Berechnung herein. In diesem Fall also den Block diekt über diesem Text. Sobald du in diesem Block einen Hash-Wert errechnet hast, siehst du den Wert entsprechend unten als \"Vorgänger\". Solltest du im oberen Block etwas ändern, dann ändert sich auch der untere Block. Hierfür musst du dann aber nochmal zusätzlich auf \"Berechne\" drücken im unteren Block."
    }
  }
}
